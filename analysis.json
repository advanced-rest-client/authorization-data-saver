{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An element responsible for applying authorization data to the request\nbefore sending it to a server and requesting credentials data from the user.\nIt contains UI dialogs to request data from the user for Basic and NTLM\nauthorization. It listens for `before-request` and `response-ready` events\nas defined\n[in this issue](https://github.com/jarrodek/ChromeRestClient/issues/1010).\n\nThe element's API is based on custom events fired by the request editor\n(controller). There's no need to directly call any function or set a\nproperty. It adds event listeners to the `window` object. It should be\nplaced as close to the `<body>` as possible.\n\nThe `before-request` event is handled synchronously.\n\n### Styling\n\nSee [auth-dialogs](https://github.com/advanced-rest-client/auth-dialogs) for styling options.\n\n### Demo\n\nSee [auth-dialogs](https://github.com/advanced-rest-client/auth-dialogs) for dialogs demos.",
      "summary": "",
      "path": "authorization-data-saver.html",
      "properties": [
        {
          "name": "isPayload",
          "type": "boolean | null | undefined",
          "description": "Set to true when the request can carry a payload.\nIt's required for calculating headers errors.",
          "privacy": "public",
          "sourceRange": {
            "file": "../headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 56,
              "column": 8
            },
            "end": {
              "line": 56,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "dialog",
          "type": "(HTMLElement | null)",
          "description": "Reference to currently opened dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "URL of the request related to current operation.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 8
            },
            "end": {
              "line": 68,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_cache",
          "type": "Array | null | undefined",
          "description": "Cashed list of authorization data for current session.\nIt is here so the element won't ask data store for data that already has been received.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "_openedDialog",
          "type": "string | null | undefined",
          "description": "Currently opened dialog name.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 8
            },
            "end": {
              "line": 77,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "filterHeaders",
          "description": "Filter array of headers and return not duplicated array of the same headers.\nDuplicated headers should be appended to already found one using coma separator.",
          "privacy": "public",
          "sourceRange": {
            "file": "../headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "Array",
              "description": "Headers array to filter. All objects in headers array must have \"name\"\n               and \"value\" keys."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "An array of filtered headers."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "headersToString",
          "description": "Parse headers array to Raw HTTP headers string.",
          "privacy": "public",
          "sourceRange": {
            "file": "../headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headersArray",
              "type": "(Array | String | Headers)",
              "description": "List of objects with \"name\" and \"value\"\nproperties."
            }
          ],
          "return": {
            "type": "String",
            "desc": "A HTTP representation of the headers."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "headerItemToString",
          "description": "Transforms a header model item to a string.\nArray values are supported.",
          "privacy": "public",
          "sourceRange": {
            "file": "../headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "header",
              "type": "Object",
              "description": "Object with name and value."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Generated headers line"
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "headersToJSON",
          "description": "Parse HTTP headers input from string to array of objects containing `name` and `value`\nproperties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "(String | Headers)",
              "description": "Raw HTTP headers input or Headers object"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "The array of objects where properties are `name` as a header\nname and `value` as a header content."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "_headersStringToJSON",
          "description": "Parse headers string to array of objects.\nSee `#toJSON` for more info.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headersString"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "_hedersToJSON",
          "description": "Parse Headers object to array of objects.\nSee `#toJSON` for more info.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 190,
              "column": 4
            },
            "end": {
              "line": 213,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "_oldCombine",
          "description": "Helper method for old system: combine headers list with encoding value.\nNote that this function will update the original array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 237,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "Array",
              "description": "An array of headers"
            },
            {
              "name": "encoding",
              "type": "String",
              "description": "An encoding string from the old request."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if encoding has been added to the array."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "getContentType",
          "description": "Get the Content-Type value from the headers.",
          "privacy": "public",
          "sourceRange": {
            "file": "../headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 245,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "(Array | String)",
              "description": "Either HTTP headers string or list of headers."
            }
          ],
          "return": {
            "type": "(String | null)",
            "desc": "A content-type header value or null if not found"
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "replaceHeaderValue",
          "description": "Replace value for given header in the headers list.",
          "privacy": "public",
          "sourceRange": {
            "file": "../headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 277,
              "column": 4
            },
            "end": {
              "line": 311,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "(Array | String | Object)",
              "description": "A headers object. Can be string, array of objects or\nHeaders object."
            },
            {
              "name": "name",
              "type": "String",
              "description": "Header name to be replaced."
            },
            {
              "name": "value",
              "type": "String",
              "description": "Header value to be repleced."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Updated headers."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "getHeaderError",
          "description": "Get error message for given header string.",
          "privacy": "public",
          "sourceRange": {
            "file": "../headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 317,
              "column": 4
            },
            "end": {
              "line": 351,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input",
              "type": "(Header | Array | String)",
              "description": "A headers to check."
            }
          ],
          "return": {
            "type": "?String",
            "desc": "An error message or null if the headers are valid."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_beforeRequestHandler",
          "description": "Handler for the ARC's event `before-request`.\nThe event will be handled synchronously.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 120,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "processRequest",
          "description": "Processes request before it's send to the transport library.\nIt sets\nTo mimic browser behavior the authorization data won't be set unless at least once in the\nsession the user has set authorization data for current URL.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 154,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "The ArcRequest object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_applyRequestBasicAuthData",
          "description": "Applies the basic authorization data to the request.\n\nIf the header value have changed then it fires `request-headers-changed` custom event.\nIt sets computed value of the readers to the event's detail object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "The event's detail object. Changes made here will be propagated to\nthe event."
            },
            {
              "name": "data",
              "type": "Object",
              "description": "The authorization data to apply."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_applyRequestNtlmAuthData",
          "description": "Applies the NTLM authorization data to the request.\n\nBecause NTLM requires certain operations on a socket it's bot just about setting a headers\nbut whole NTLM configuration object.\n\nApplied the `auth` object to the event's `detail.auth` object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 4
            },
            "end": {
              "line": 199,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "The event's detail object. Changes made here will be propagated to\nthe event."
            },
            {
              "name": "values",
              "type": "Object",
              "description": "The authorization data to apply."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_afterRequestHandler",
          "description": "Handler to the `response-ready` event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 215,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "authorizationMethodFromResponse",
          "description": "Checks if the response require authorization and if so it returns the authorization\nmethod name for the endpoint.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 244,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "response",
              "type": "Response",
              "description": "The response object associated with the request"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Authorization method or undefined if not found or not supported."
          }
        },
        {
          "name": "_processAuthResponse",
          "description": "Checks response object for any auth request.\nIf authorization is required for the endpoint it will display corresponding dialog if\nsupported.\n\nThis function shouldn't interrupt normal response flow. Id will display authorization\ndialog if required and when the user accept the dialog it fires the `resend-auth-request`\ncustom event.\n\nThis function exists quietly if any of the arguments are not set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 260,
              "column": 4
            },
            "end": {
              "line": 273,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "String",
              "description": "Authorization method"
            },
            {
              "name": "request",
              "type": "Request",
              "description": "The request object."
            },
            {
              "name": "id",
              "type": "String",
              "description": "Request ID"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openBasicAuthDialog",
          "description": "Opens a basic authorization dialog when response status is 401 and basic or digest\nauthorization is required.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 4
            },
            "end": {
              "line": 284,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openNtlmAuthDialog",
          "description": "Opens the NTLM authorization dialog when response status is 401 and NTLM authorization\nis required.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 4
            },
            "end": {
              "line": 295,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_restoreDialogData",
          "description": "Restores the database object entry or cached object if any.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 302,
              "column": 4
            },
            "end": {
              "line": 323,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "The URL of the request"
            },
            {
              "name": "authMethod",
              "type": "String",
              "description": "The Authorization method to restore data for."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_findCachedAuthData",
          "description": "Finds an auth data for given `url`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 4
            },
            "end": {
              "line": 337,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Authorization type."
            },
            {
              "name": "url",
              "type": "String",
              "description": "The URL of the request."
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "Auth data if exists in the cache."
          }
        },
        {
          "name": "_cacheAuthData",
          "description": "Sends authorization data to the cache.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 4
            },
            "end": {
              "line": 353,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Authorization type."
            },
            {
              "name": "url",
              "type": "String",
              "description": "current request URL"
            },
            {
              "name": "data",
              "type": "Object",
              "description": "Authorization data to store."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setRestoredAuthData",
          "description": "Called when stored authorization data has been found in database or cache.\nIt updates the data in opened dialog.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 358,
              "column": 4
            },
            "end": {
              "line": 367,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "authMethod"
            },
            {
              "name": "doc"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_restoreBasicData",
          "description": "Restore stored data to basic auth dialog.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 4
            },
            "end": {
              "line": 380,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "doc",
              "type": "Object",
              "description": "Stored authorization data."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_restoreNtlmData",
          "description": "Restore stored data to NTLM auth dialog.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 386,
              "column": 4
            },
            "end": {
              "line": 394,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "doc",
              "type": "Object",
              "description": "Stored authorization data."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeUrlPath",
          "description": "Removes query parameters and the fragment part from the URL",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 4
            },
            "end": {
              "line": 416,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "URL to process"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Canonical URL."
          }
        },
        {
          "name": "_onAuthDialogResult",
          "description": "Called when the authorization dialog has been closed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 4
            },
            "end": {
              "line": 443,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setNtlmAuthData",
          "description": "Sets the NTLM authorization data and sends the `ntlm-data-changed` event so the request\neditor can attach it to the next request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 4
            },
            "end": {
              "line": 471,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "values",
              "type": "Object",
              "description": "Map with values from dialog event."
            },
            {
              "name": "id",
              "type": "String",
              "description": "Request ID"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setBasicAuthData",
          "description": "Sets the basic authorization data in the `headers` property or in headers in the `request`\nobject if provided.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 479,
              "column": 4
            },
            "end": {
              "line": 495,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "values",
              "type": "Object",
              "description": "Map with values from dialog event."
            },
            {
              "name": "id",
              "type": "String",
              "description": "Request ID"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resendRequest",
          "description": "Sends an event about sending request with auth data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 500,
              "column": 4
            },
            "end": {
              "line": 508,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Request ID"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_storeAuthData",
          "description": "Stores the data in the datastore.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 512,
              "column": 4
            },
            "end": {
              "line": 528,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "authMethod"
            },
            {
              "name": "authData"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 61,
          "column": 2
        },
        "end": {
          "line": 556,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "LogicElements.AuthorizationDataSaver",
      "attributes": [
        {
          "name": "is-payload",
          "description": "Set to true when the request can carry a payload.\nIt's required for calculating headers errors.",
          "sourceRange": {
            "file": "../headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 56,
              "column": 8
            },
            "end": {
              "line": 56,
              "column": 26
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "url",
          "description": "URL of the request related to current operation.",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 8
            },
            "end": {
              "line": 68,
              "column": 19
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "ntlm-data-changed",
          "description": "Fires when the NTLM authorization data are received from user input.\nThe request builder element should intercept this event and attach it to the next request.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-header-changed",
          "description": "Fired when the header value has changed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-headers-changed",
          "description": "Fired when the request headers changed because of applied authorization.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "resend-auth-request",
          "description": "Fired when the user accepted authorization dialog, the request object has been altered and\nthe request is ready to be called again.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "authorization-data-saver",
      "mixins": [
        "ArcBehaviors.HeadersParserBehavior"
      ]
    }
  ]
}
